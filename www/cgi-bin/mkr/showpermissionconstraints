#!/bin/tcsh -f
#  rightsdraw
#  Version: 2.0.1
#  Authors: L. Boch
#
#  Copyright (C) 2010-2012 RAI - Radiotelevisione Italiana <cr_segreteria@rai.it>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

set echo_style = both
echo "content-type: text/html\n"
set mykpr = `cat $pdir/users/$puser/config/mykpr`
set repo = $pdir/users/$puser/repo/pprights
set this = `basename $0`
date > $pdir/logs/$this.time
if ( $REQUEST_METHOD != "GET" ) then
	echo "400"
	echo "Bad request "
	echo "$this accept only GET"
	exit 99
endif
	

set inquery = `echo $QUERY_STRING | cut -d'&' -f1- --output-delimiter=' ' | cut -d'=' -f1- --output-delimiter=' '`
set inquery = `$pdir/bin/clean.querystring $inquery`
set instance = "null"
set permission = "null"
set kp = "null"
set i = 1
while ( $i < $#inquery )
        if ( "$inquery[$i]" == "instance" ) then
                @ i++
                set instance = "$inquery[$i]"
        else if ( "$inquery[$i]" == "permission" ) then
                @ i++
                set permission = "$inquery[$i]"
        else if ( "$inquery[$i]" == "kp" ) then
                @ i++
                set kp = "$inquery[$i]"
        else
		echo "400"
		echo "Bad request "
		echo "$this Unknown input parameter: $inquery[$i]"
                exit 1
        endif
        @ i++
end
set ret = 0
#Sanity check
if ( !( -e "$repo/$instance" ) ) then
	echo "404"
	echo "Not Found "
	echo "$this $repo/$instance"
	exit 2
endif
#			shouldn't be modified as in rightscompare? (i.e. making also ByPassUnions)
#			this is done for showing the constraints on the identified Permission
#			NO impact untill constraints are put in Union, which is uncovered however
if ( !(-ersf $pdir/logs/.tmp.ByPassIntrsctns.$instance ) ) then
# this should already have been done by mkr/viewedit. Need name convention
	xsltproc $pdir/xsl/ByPassIntrsctns.xsl $repo/$instance > $pdir/logs/.tmp.ByPassIntrsctns.$instance
	set ret = $?
	if ( $ret ) then
		echo "500"
		echo "Server Error"
		echo "$this got $ret from ByPassInstrsctns on $instance"
		exit 3
	endif
endif
#if ( $kp == null && -ersf $repo/.tmp/$instance.mkr.xml ) then
if ( -ersf $repo/.tmp/$instance.mkr.xml ) then
	set mkr = $repo/.tmp/$instance.mkr.xml
else 
	set mkr = null
endif
xsltproc  --stringparam kp $kp --stringparam mkr $mkr --stringparam permission "$permission" --stringparam instance $instance $pdir/xsl/showPermissionConstraintsDetails.xsl $pdir/logs/.tmp.ByPassIntrsctns.$instance
if ( $ret ) then
	echo "500"
	echo "Server Error"
	echo "$this got $ret from showPermissionConstraintsDetails on $instance"
	exit 4
endif
#################
date >> $pdir/logs/$this.time
exit 0





