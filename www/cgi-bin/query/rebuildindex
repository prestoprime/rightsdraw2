#!/bin/tcsh -f
#  rightsdraw
#  Version: 2.0.1
#  Authors: L. Boch
#
#  Copyright (C) 2010-2012 RAI â€“ Radiotelevisione Italiana <cr_segreteria@rai.it>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

set echo_style = both
echo "content-type: text/plain\n"
set repo = $pdir/users/$puser/repo/pprights
set mcomode = `cat $pdir/users/$puser/config/mcomode`
set repo = $pdir/users/$puser/repo/$mcomode
set p4enable = `cat $pdir/users/$puser/config/p4enable`
set querymode = `cat $pdir/users/$puser/config/querymode`
set p4serverurl = `cat $pdir/users/$puser/config/p4serverurl`
set p4account = `cat $pdir/users/$puser/config/p4account`
set curloptions = `cat $pdir/users/$puser/config/curloptions`
set this = `basename $0`
if ( $REQUEST_METHOD != "GET" ) then
	echo "400"
	echo "Bad request "
	echo "$this accept only GET"
	exit 99
endif
	

set inquery = `echo $QUERY_STRING | cut -d'&' -f1- --output-delimiter=' ' | cut -d'=' -f1- --output-delimiter=' '`
set inquery = `$pdir/bin/clean.querystring $inquery`
set i = 1
while ( $i < $#inquery )
        if ( "$inquery[$i]" == "querymode" ) then
                @ i++
                set querymode = "$inquery[$i]"
        else
		echo "400"
		echo "Bad request "
		echo "$this unknown $inquery[$i]"
                exit 1
        endif
        @ i++
end
#Sanity check
if ( $querymode == "p4" && $p4enable != on ) then
	echo "400"
	echo "Bad request "
	echo "$this p4 is not enabled for requested querymode"
        exit 11
else if ( $querymode != "p4" && $querymode != "local" ) then
	echo "400"
	echo "Bad request "
	echo "$this unknown querymode $querymode"
        exit 12
endif
if ( $querymode == "local" ) then
	set myindex = $repo/.rightsindex
	if ( -ersf $myindex ) then
		mv $myindex $myindex.bak
	endif
	set lista = `ls -1 $repo`
	foreach instance ( $lista )
		$pdir/bin/rightsindexinstance -id $instance -sav $myindex $repo/$instance  >  $pdir/logs/.tmp.$this.$$.$instance.index
		set ret = $?
		if ( $ret ) then
		        echo "500"
		        echo "Server Error"
			echo "$this got $ret from rightsindexinstance $instance"
			cp $myindex $pdir/logs/$this.$$.badindex
			cp $myindex.bak $myindex
			exit 3
		endif
	end
	echo "200"
	echo "Success"
	echo "Index rebuilt for $#lista instances"
	exit 0
else if ( $querymode == "p4" ) then
######	this part is not tested!!!! ###################
	curl -F sipFile=@$pdir/logs/$instance.sip  "$p4serverurl/wf/execute/rebuild_rights_index" -o $pdir/logs/$this.$$  -H "userID:${p4account}" $curloptions
	cat  $pdir/logs/$this.$$
else
#normally already filtered above during sanity check
	echo "500"
	echo "Server Error"
	echo "$this unsupported querymode $querymode"
endif
