#!/bin/tcsh -f
#  rightsdraw
#  Version: 2.0.2
#  Authors: L. Boch
#
#  Copyright (C) 2010-2013 RAI - Radiotelevisione Italiana <cr_segreteria@rai.it>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

set echo_style = both
echo "content-type: text/html\n"
set mcomode = `cat $pdir/users/$puser/config/mcomode`
set repo = $pdir/users/$puser/repo/$mcomode
set goedit = "true"
set removeorphans = "false"
set this = `basename $0`
if ( $REQUEST_METHOD != "POST" ) then
	echo "400"
	echo "Bad request "
	echo "$this accept only POST"
	exit 99
endif
if ( $CONTENT_LENGTH > $securesize ) then
	echo "413"
	echo "Request Entity Too Large"
	exit 1
endif
#Getting this from multipart
set indata = $pdir/logs/$this.$$
cat > $indata
set mpsep = `head -n 1 $indata|sed 's/.$//'`  #to remove hidden CR

set goeditpointer = `grep -n "Content-Disposition" $indata | grep 'name="goedit"'|cut -d':' -f1`
if ( $goeditpointer != "" ) then
	@ goeditpointer +=2
	set goedit = `head -n $goeditpointer $indata | tail -n1|sed 's/.$//'` 
endif

set instancepointer = `grep -n "Content-Disposition" $indata | grep 'name="instance"'|cut -d':' -f1`
if ( $instancepointer == "" ) then
	echo "400"
	echo "Bad request"
	echo "$this missing instance"
	exit 11
endif
set instance = `head -n $instancepointer $indata | tail -n1| cut -d'=' -f3|cut -d'"' -f2`

@ instancepointer += 2

set mpseppointers = `grep -n "\$mpsep" $indata | cut -d':' -f1`
set instancelines = 0
foreach mpseppointer ( $mpseppointers )
	if ( $mpseppointer >= $instancepointer ) then
		break;
	endif
end
@ mpseppointer-= 2
@ instancelines = $mpseppointer - $instancepointer
set outdata = $pdir/logs/$this.$$.out
head -n $mpseppointer $indata | tail -n $instancelines > $outdata
echo "head -n $mpseppointer $indata | tail -n $instancelines > $outdata" > /tmp/debug
#Sanity check
if (  -e "$repo/$instance" ) then
	echo "403"
	echo "Forbidden"
	echo "$this $repo/$instance"
	exit 3
endif
#actual validation command (using mco.dosvg provisionally)
$pdir/bin/mco.dosvg $outdata >& /dev/null
set ret = $?
if ( $ret ) then
	if ( -ersf $pdir/lib/mcoserializationconverter ) then
		#Trying if it's RDF/XML
		set result = $pdir/logs/$this.$$.result
#		$pdir/lib/mcoserializationconverter $outdata $result false  #interface happen to be 2 arguments and "false" is default (to be further checked)
		$pdir/lib/mcoserializationconverter $outdata $result
		#Relying better on mco.dosvg for exit code
		$pdir/bin/mco.dosvg $result >& /dev/null
		set ret = $?
		if ( $ret ) then
			if ( -ersf $pdir/lib/cel2mco ) then
				#Trying if it's CEL/XML
				$pdir/lib/cel2mco $outdata $result.mco
				set ret = $?
				if ( $ret ) then
					echo "500"
					echo "Server Error"
					echo "$this $ret from cel2mco"
					exit 42
				endif
				#GOT RDF/XML, now convertiong to OWL/XML
				if ( -e $result ) then
					rm $result
				endif
			#	$pdir/lib/mcoserializationconverter $result.mco $result false
				$pdir/lib/mcoserializationconverter $result.mco $result false
				set ret = $?
				if ( $ret ) then
					echo "500"
					echo "Server Error"
					echo "$this $ret from mcoserializationconverter"
					cat $result
					exit 43
				endif
				set removeorphans = "true"
			else
				echo "500"
				echo "Server Error"
				echo "$this $ret from mcoserializationconverter"
				echo "$this cel2mco not found"
				cat $result
				exit 41
			endif
		endif
		#Resuming, now we should have good OWL/XML
		mv $result $outdata
		#Last check
		$pdir/bin/mco.dosvg $outdata >& /dev/null
		set ret = $?
		if ( $ret ) then
			echo "500"
			echo "Server error "
			echo "$this $ret from mco.dosvg"
			exit 44
		endif
	else
		echo "500"
		echo "Server error "
		echo "$this $ret from mco.dosvg"
		echo "$this mcoserializationconverter not found"
		exit 4
	endif
endif
#Moving to repository
mv $outdata $repo/$instance
set ret = $?
if ( $ret ) then
	echo "500"
	echo "Server error "
	echo "$this $ret"
	exit 5
endif
if ( "$removeorphans" == "true" ) then
	xsltproc $pdir/xsl/removeOrphans.xsl $repo/$instance > $repo/.tmp.$instance
	set ret = $?
	if ( $ret ) then
		echo "500"
		echo "Server error "
		echo "$this $ret from removeOrphans"
		exit 5
	endif
	mv $repo/.tmp.$instance $repo/$instance
endif
echo "200"
echo "Success"
if ( "$goedit" == "true" ) then
	setenv QUERY_STRING "instance=$instance"
	setenv REQUEST_METHOD GET 
	$pdir/www/cgi-bin/mco/viewedit | awk 'FNR>1'
	exit 0
else
	exit 0
endif
