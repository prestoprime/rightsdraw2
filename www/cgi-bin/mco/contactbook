#!/bin/tcsh -f
#  rightsdraw
#  Version: 2.0.1
#  Authors: L. Boch
#
#  Copyright (C) 2010-2012 RAI â€“ Radiotelevisione Italiana <cr_segreteria@rai.it>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

set echo_style = both
echo "content-type: text/plain\n"
set mcomode = `cat $pdir/users/$puser/config/mcomode`
set repo = $pdir/users/$puser/repo/$mcomode
set this = `basename $0`
if ( $REQUEST_METHOD != "GET" ) then
	echo "400"
	echo "Bad request "
	echo "$this accept only GET"
	exit 99
endif
	

set inquery = `echo $QUERY_STRING | cut -d'&' -f1- --output-delimiter=' ' | cut -d'=' -f1- --output-delimiter=' '`
set inquery = `$pdir/bin/clean.querystring $inquery`
set instance = "null"
set handle = "null"
set action = "save"
set action = "load"
set i = 1
while ( $i < $#inquery )
        if ( "$inquery[$i]" == "instance" ) then
                @ i++
                set instance = "$inquery[$i]"
        else if ( "$inquery[$i]" == "handle" ) then
                @ i++
                set handle = "$inquery[$i]"
        else if ( "$inquery[$i]" == "action" ) then
                @ i++
                set action = "$inquery[$i]"
        else
		echo "400"
		echo "Bad request "
		echo "$this Unknown input parameter: $inquery[$i]"
                exit 1
        endif
        @ i++
end
set ret = 0
#Sanity check
if ( "$instance" == null ) then
	if ( "$action" != export && "$action" != clean ) then
		echo "400"
		echo "Bad request "
		echo "$this action $action invalid argument"
        	exit 1
	endif
else
	 if ( "$action" != save && "$action" != load ) then
		echo "400"
		echo "Bad request "
		echo "$this action $action invalid argument"
	        exit 1
	else if ( !( -e "$repo/$instance" ) ) then
		echo "404"
		echo "Not Found "
		echo "$this $repo/$instance"
		exit 2
	endif
endif
if ( $action == save ) then
	set input = $repo/$instance
	set output = $repo/../contactbook
	cp $output $output.sav
else if ( $action == load ) then 
	set output = $repo/$instance
	set input = $repo/../contactbook
else if ( $action == export ) then
	cat $repo/../contactbook
	exit 0
else if ( $action == clean ) then
	cp $repo/../contactbook.empty $repo/../contactbook
	exit 0
else
	echo "400"
	echo "Bad request "
	echo "$this action $action invalid argument"
        exit 1
endif
set inputtmp = $repo/.tmp/$this.input.$$
set outputtmp = $repo/.tmp/$this.output.$$
xsltproc --stringparam target $handle --stringparam mode down $pdir/xsl/filterFromIndividual.xsl $input > $inputtmp
set ret = $?
if ( $ret ) then
	echo "500"
	echo "Server Error"
	echo "$this got $ret in filtering $input from $handle"
	exit 3
endif
xsltproc --stringparam extinstance $inputtmp $pdir/xsl/mergeWithInstance.xsl $output > $outputtmp
set ret = $?
if ( $ret ) then
	echo "500"
	echo "Server Error"
	echo "$this got $ret in mergin $inputtmp into $outputtmp"
	exit 3
endif
cp $outputtmp $output
echo "200"
echo "Success"
exit 0
