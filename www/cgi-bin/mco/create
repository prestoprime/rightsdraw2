#!/bin/tcsh -f
#  rightsdraw
#  Version: 2.0.2
#  Authors: L. Boch
#
#  Copyright (C) 2010-2013 RAI - Radiotelevisione Italiana <cr_segreteria@rai.it>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

set echo_style = both
echo "content-type: text/html\n"
set mcomode = `cat $pdir/users/$puser/config/mcomode`
set repo = $pdir/users/$puser/repo/$mcomode
set this = `basename $0`
if ( $REQUEST_METHOD != "GET" ) then
	echo "400"
	echo "Bad request "
	echo "$this accept only GET"
	exit 99
endif
	

set inquery = `echo $QUERY_STRING | cut -d'&' -f1- --output-delimiter=' ' | cut -d'=' -f1- --output-delimiter=' '`
set inquery = `$pdir/bin/clean.querystring $inquery`
set instance = "null"
set identifier = "null"
set title = "null"
set description = "null"
set i = 1
while ( $i < $#inquery )
        if ( "$inquery[$i]" == "identifier" ) then
                @ i++
                set identifier = "$inquery[$i]"
        else if ( "$inquery[$i]" == "title" ) then
                @ i++
                set title = "$inquery[$i]"
        else if ( "$inquery[$i]" == "description" ) then
                @ i++
                set description = "$inquery[$i]"
        else
		echo "400"
		echo "Bad request "
		echo "$this unknown $inquery[$i]"
                exit 1
        endif
        @ i++
end
if ( $identifier == "null" ) then
	set xnum = `cat $pdir/users/$puser/config/inumber|bc`
	@ xnum ++
	echo $xnum > $pdir/users/$puser/config/inumber
	set identifier = `date +'mco.%Y-%m-%d.'`$xnum
endif
set instance = `echo $identifier |sed -e s/':'/'-'/g`
if ( $mcomode != kpr ) then
	set instance = $instance.owl
endif
#Sanity check
if ( ( -e "$repo/$instance" ) ) then
	echo "403"
	echo "Forbidden "
	echo "$this instance $instance already in repo"
	exit 2
endif
xsltproc --stringparam setIRI `cat $pdir/users/$puser/config/owliriprefix`$instance $pdir/xsl/getSetOntologyIRI.xsl $pdir/newinstance.owl > $repo/$instance
set ret = $?
if ( $ret ) then
	echo "500"
	echo "Server Error"
	echo "$this got $ret in creating instance $instance"
	rm $repo/$instance
	exit 3
endif

####################
set xnum = `cat $pdir/users/$puser/config/inumber|bc`
@ xnum ++
echo $xnum > $pdir/users/$puser/config/inumber
set twoname = "#x$xnum"
if ( $mcomode == "contracts" ) then
####################
	set twoclass = "urn:mpeg:mpeg21:mco:core:2012#Contract"
	xsltproc --stringparam twoclass $twoclass --stringparam twoname $twoname $pdir/xsl/addIndividual.xsl $repo/$instance > $repo/.tmp/$instance
	set ret = $?
	if ( $ret ) then
		echo "500"
		echo "Server error "
		echo "$this got $ret in creating Contract $twoname into new instance $instance"
		rm $repo/$instance
		exit 4
	endif
	mv $repo/.tmp/$instance $repo/$instance
####################
else if ( $mcomode == "pprights" ) then
####################
	set twoclass = "http://purl.oclc.org/NET/mvco.owl#IPEntity"
	xsltproc --stringparam twoclass $twoclass --stringparam twoname $twoname $pdir/xsl/addIndividual.xsl $repo/$instance > $repo/.tmp/$instance
	set ret = $?
	if ( $ret ) then
		echo "500"
		echo "Server error "
		echo "$this got $ret in creating IPEntity $twoname into new instance $instance"
		rm $repo/$instance
		exit 4
	endif
	mv $repo/.tmp/$instance $repo/$instance
	set owner = $twoname
	set key = "urn:mpeg:mpeg21:2002:01-DII-NS#Identifier"
	set value = "$identifier"
	xsltproc --stringparam owner $owner --stringparam key $key --stringparam value $value $pdir/xsl/addDataProperty.xsl $repo/$instance > $repo/.tmp/$instance
	set ret = $?
	if ( $ret ) then
		echo "500"
		echo "Server error "
		echo "$this got $ret in adding $identifier to  IPEntity $twoname into new instance $instance"
		rm $repo/$instance
		exit 4
	endif
	mv $repo/.tmp/$instance $repo/$instance
	# adding annotation properties
	if ( "$title" != "null" ) then
		set mdvalue = "$title"
		set mdkey = "http://purl.org/dc/elements/1.1/title"
		set mddatatype = "&xsd;string"
		xsltproc  --stringparam owner $owner --stringparam key $mdkey --stringparam value "$mdvalue" --stringparam datatype $mddatatype $pdir/xsl/addAnnotationProperty.xsl $repo/$instance > $repo/.tmp/$instance
		set ret = $?
		if ( $ret ) then
			echo "500"
			echo "Server Error"
			echo "$this failed on addAnnotationProperty ( $owner, $mdkey, $mddatatype, $mdvalue ) to $instance"
			exit 4
		endif
		mv $repo/.tmp/$instance $repo/$instance
	endif
	if ( "$description" != "null" ) then
		set mdvalue = "$description"
		set mdkey = "http://purl.org/dc/elements/1.1/description"
		set mddatatype = "&xsd;string"
		xsltproc  --stringparam owner $owner --stringparam key $mdkey --stringparam value "$mdvalue" --stringparam datatype $mddatatype $pdir/xsl/addAnnotationProperty.xsl $repo/$instance > $repo/.tmp/$instance
		set ret = $?
		if ( $ret ) then
			echo "500"
			echo "Server Error"
			echo "$this failed on addAnnotationProperty ( $owner, $mdkey, $mddatatype, $mdvalue ) to $instance"
			exit 4
		endif
		mv $repo/.tmp/$instance $repo/$instance
	endif
	if ( "$identifier" != "null" ) then
		set mdvalue = "$identifier"
		set mdkey = "http://purl.org/dc/elements/1.1/identifier"
		set mddatatype = "&xsd;string"
		xsltproc  --stringparam owner $owner --stringparam key $mdkey --stringparam value "$mdvalue" --stringparam datatype $mddatatype $pdir/xsl/addAnnotationProperty.xsl $repo/$instance > $repo/.tmp/$instance
		set ret = $?
		if ( $ret ) then
			echo "500"
			echo "Server Error"
			echo "$this failed on addAnnotationProperty ( $owner, $mdkey, $mddatatype, $mdvalue ) to $instance"
			exit 4
		endif
		mv $repo/.tmp/$instance $repo/$instance
	endif
####################
else if ( $mcomode == "kpr" ) then
####################
	set twoclass = "http://purl.oclc.org/NET/mvco.owl#Permission"
	xsltproc --stringparam twoclass $twoclass --stringparam twoname $twoname $pdir/xsl/addIndividual.xsl $repo/$instance > $repo/.tmp/$instance
	set ret = $?
	if ( $ret ) then
		echo "500"
		echo "Server error "
		echo "$this got $ret in creating IPEntity $twoname into new instance $instance"
		rm $repo/$instance
		exit 4
	endif
	mv $repo/.tmp/$instance $repo/$instance
	set owner = $twoname
	# adding annotation properties
	if ( "$title" != "null" ) then
		set mdvalue = "$title"
		set mdkey = "http://purl.org/dc/elements/1.1/title"
		set mddatatype = "&xsd;string"
		xsltproc  --stringparam owner $owner --stringparam key $mdkey --stringparam value "$mdvalue" --stringparam datatype $mddatatype $pdir/xsl/addAnnotationProperty.xsl $repo/$instance > $repo/.tmp/$instance
		set ret = $?
		if ( $ret ) then
			echo "500"
			echo "Server Error"
			echo "$this failed on addAnnotationProperty ( $owner, $mdkey, $mddatatype, $mdvalue ) to $instance"
			exit 4
		endif
		mv $repo/.tmp/$instance $repo/$instance
	endif
	if ( "$description" != "null" ) then
		set mdvalue = "$description"
		set mdkey = "http://purl.org/dc/elements/1.1/description"
		set mddatatype = "&xsd;string"
		xsltproc  --stringparam owner $owner --stringparam key $mdkey --stringparam value "$mdvalue" --stringparam datatype $mddatatype $pdir/xsl/addAnnotationProperty.xsl $repo/$instance > $repo/.tmp/$instance
		set ret = $?
		if ( $ret ) then
			echo "500"
			echo "Server Error"
			echo "$this failed on addAnnotationProperty ( $owner, $mdkey, $mddatatype, $mdvalue ) to $instance"
			exit 4
		endif
		mv $repo/.tmp/$instance $repo/$instance
	endif
####################
endif
echo "200"
echo "Success"
setenv QUERY_STRING "instance=$instance"
$pdir/www/cgi-bin/mco/viewedit | awk 'FNR>1'
exit 0

